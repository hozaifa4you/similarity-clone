// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider     = "mysql"
   url          = env("DATABASE_URL")
   relationMode = "prisma"
}

enum RequestType {
   GET
   POST
   PATCH
   DELETE
   PUT
}

model Account {
   id                 String    @id @default(cuid())
   userId             String
   providerType       String
   providerId         String
   providerAccountId  String
   refreshToken       String?
   accessToken        String?
   accessTokenExpires DateTime?
   createdAt          DateTime  @default(now())
   updatedAt          DateTime  @updatedAt
   user               User      @relation(fields: [userId], references: [id])

   @@unique([providerId, providerAccountId])
   @@index([userId])
}

model Session {
   id           String   @id @default(cuid())
   userId       String
   expires      DateTime
   sessionToken String   @unique
   accessToken  String   @unique
   createdAt    DateTime @default(now())
   updatedAt    DateTime @updatedAt
   user         User     @relation(fields: [userId], references: [id])

   @@index([userId])
}

model User {
   id            String    @id @default(cuid())
   name          String?
   email         String?   @unique
   emailVerified DateTime?
   image         String?
   createdAt     DateTime  @default(now())
   updatedAt     DateTime  @updatedAt
   accounts      Account[]
   sessions      Session[]
   ApiKey        ApiKey[]
}

model VerificationRequest {
   id         String   @id @default(cuid())
   identifier String
   token      String   @unique
   expires    DateTime
   createdAt  DateTime @default(now())
   updatedAt  DateTime @updatedAt

   @@unique([identifier, token])
}

// mine
model ApiKey {
   id       String       @id @default(cuid())
   key      String       @unique
   enabled  Boolean      @default(true)
   requests ApiRequest[]

   User   User   @relation(fields: [userId], references: [id])
   userId String

   @@unique([userId, key, enabled])
}

model ApiRequest {
   id        String      @id @default(cuid())
   timestamp DateTime    @default(now())
   method    RequestType @default(GET)
   path      String
   status    Int
   duration  Int

   ApiKey   ApiKey? @relation(fields: [apiKeyId], references: [id])
   apiKeyId String?

   @@index([apiKeyId, timestamp])
}
